{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"todo-complete\": a0\n  };\n};\nfunction ListComponent_ul_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"input\", 3);\n    i0.ɵɵlistener(\"click\", function ListComponent_ul_1_Template_input_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const x_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.change(x_r1));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const x_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r0.isComplete));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", x_r1.title, \" \");\n  }\n}\nexport class ListComponent {\n  constructor() {\n    this.isComplete = false;\n  }\n  change(x) {\n    if (!x.completed) {\n      x.completed = true;\n      this.isComplete = true;\n    } else {\n      x.completed = false;\n      // this.isComplete = false;\n    }\n\n    console.log(x);\n  }\n}\nListComponent.ɵfac = function ListComponent_Factory(t) {\n  return new (t || ListComponent)();\n};\nListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListComponent,\n  selectors: [[\"app-list\"]],\n  inputs: {\n    updatedList: \"updatedList\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"container-list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"checkbox\", 3, \"ngClass\"], [\"type\", \"checkbox\", 3, \"click\"]],\n  template: function ListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ListComponent_ul_1_Template, 4, 4, \"ul\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.updatedList);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf],\n  styles: [\".container-list[_ngcontent-%COMP%] {\\n  margin-top: 2rem;\\n}\\n.checkbox[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-top: 1rem;\\n  gap: 9rem;\\n}\\ninput[type=\\\"checkbox\\\"][_ngcontent-%COMP%] {\\n  transform: scale(1.5);\\n  padding: 10px;\\n}\\n.todo-complete[_ngcontent-%COMP%] {\\n  text-decoration: line-through;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQiw4QkFBOEI7RUFDOUIsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQixTQUFTO0FBQ1g7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixhQUFhO0FBQ2Y7QUFDQTtFQUNFLDZCQUE2QjtBQUMvQiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXItbGlzdCB7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG4uY2hlY2tib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDFyZW07XG4gIGdhcDogOXJlbTtcbn1cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS41KTtcbiAgcGFkZGluZzogMTBweDtcbn1cbi50b2RvLWNvbXBsZXRlIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;IACEA,0BAAkC;IAE9BA,YACA;IAAAA,gCAA6C;IAAtBA;MAAA;MAAA;MAAA;MAAA,OAASA,kCAAS;IAAA,EAAC;IAA1CA,iBAA6C;;;;;IAF1BA,eAA2C;IAA3CA,uEAA2C;IAC9DA,eACA;IADAA,2CACA;;;ACIN,OAAM,MAAOC,aAAa;EAL1BC;IAOE,eAAU,GAAY,KAAK;;EAE3BC,MAAM,CAACC,CAAO;IACZ,IAAI,CAACA,CAAC,CAACC,SAAS,EAAE;MAChBD,CAAC,CAACC,SAAS,GAAG,IAAI;MAClB,IAAI,CAACC,UAAU,GAAG,IAAI;KACvB,MAAM;MACLF,CAAC,CAACC,SAAS,GAAG,KAAK;MACnB;;;IAGFE,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAChB;;AAdWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAQ;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1Bf,8BAA4B;MAC1BA,4DAKK;MACPA,iBAAM;;;MANcA,eAAc;MAAdA,yCAAc","names":["i0","ListComponent","constructor","change","x","completed","isComplete","console","log","selectors","inputs","updatedList","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/carolinandersson/Documents/Skola/Skolarbeten/Frontend/Angular/todolist-angular-1/src/app/components/list/list.component.html","/Users/carolinandersson/Documents/Skola/Skolarbeten/Frontend/Angular/todolist-angular-1/src/app/components/list/list.component.ts"],"sourcesContent":["<div class=\"container-list\">\n  <ul *ngFor=\"let x of updatedList\">\n    <li class=\"checkbox\" [ngClass]=\"{ 'todo-complete': isComplete }\">\n      {{ x.title }}\n      <input type=\"checkbox\" (click)=\"change(x)\" />\n    </li>\n  </ul>\n</div>\n<!-- change event event namnet changeboolean -->\n<!-- [(ngModel)]=\"updatedList.completed\" -->\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ToDo } from \"src/app/todo.model\";\n\n@Component({\n  selector: \"app-list\",\n  templateUrl: \"./list.component.html\",\n  styleUrls: [\"./list.component.css\"],\n})\nexport class ListComponent {\n  @Input() updatedList!: ToDo[];\n  isComplete: boolean = false;\n\n  change(x: ToDo) {\n    if (!x.completed) {\n      x.completed = true;\n      this.isComplete = true;\n    } else {\n      x.completed = false;\n      // this.isComplete = false;\n    }\n\n    console.log(x);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}